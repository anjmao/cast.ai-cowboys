version: "3.9"

services:
  jaeger-cowboys:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"

  postgres-cowboys:
    image: postgres:11-bullseye
    command: postgres -c "max_connections=200" -c "shared_buffers=128MB"
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - pg-storage:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready --username=$POSTGRES_USER && psql --username=$POSTGRES_USER --list"
      timeout: 10s
      retries: 20

  rabbitmq-cowboys:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rmq-storage:/var/lib/rabbitmq:rw
    healthcheck:
      interval: 30s
      timeout: 30s
      retries: 5
      test: rabbitmq-diagnostics check_port_connectivity

  cowboy-api:
    image: cowboy-api:latest
    build:
      context: .
      dockerfile: Cowboys.State.Api/Dockerfile
      args:
        PAT_TOKEN: $PAT_TOKEN
    ports:
      - "8080:80"
    environment:
      - DataAccess__ConnectionString=Server=postgres-cowboys;Port=5432;Database=$POSTGRES_DB;User Id=$POSTGRES_USER;Password=$POSTGRES_PASSWORD;Include Error Detail=true;
      - Rmq__Host=rabbitmq-cowboys
      - Jaeger__Host=jaeger-cowboys
    depends_on:
      rabbitmq-cowboys:
        condition: service_healthy
      postgres-cowboys:
        condition: service_healthy

  cowboy-worker-manager:
    image: cowboy-manager:latest
    build:
      context: .
      dockerfile: Cowboys.Worker.Manager/Dockerfile
      args:
        PAT_TOKEN: $PAT_TOKEN
    environment:
      - DataAccess__ConnectionString=Server=postgres-cowboys;Port=5432;Database=$POSTGRES_DB;User Id=$POSTGRES_USER;Password=$POSTGRES_PASSWORD;Include Error Detail=true;
      - Rmq__Host=rabbitmq-cowboys
      - Jaeger__Host=jaeger-cowboys
    depends_on:
      rabbitmq-cowboys:
        condition: service_healthy
      postgres-cowboys:
        condition: service_healthy
      cowboy-api:
        condition: service_started
      

  cowboy-workers:
    image: cowboy:latest
    deploy:
      replicas: 5
    build:
      context: .
      dockerfile: Cowboys.Worker/Dockerfile
      args:
        PAT_TOKEN: $PAT_TOKEN
    environment:
      - CowboysHttpApi__Url=http://cowboy-api
      - Rmq__Host=rabbitmq-cowboys
      - Jaeger__Host=jaeger-cowboys
    depends_on:
      rabbitmq-cowboys:
        condition: service_healthy
      postgres-cowboys:
        condition: service_healthy
      cowboy-worker-manager:
        condition: service_started

volumes:
  pg-storage:
  rmq-storage: